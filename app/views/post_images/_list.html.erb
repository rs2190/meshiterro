<div class="card-list-container py-5">
  <% post_images.each do |post_image| %>
  <div class="card w-50 mx-auto mt-4 shadow-lg">

    <!--投稿部分にはBootstrapのcardというコンポーネントを使用しています。-->
    <!--画像と、その詳細について表示するときなどに多く使用されるレイアウトです。-->
    <!--カードで表示したい部分を囲っているdiv要素は以下のようになっています。-->

    <!--ここで重要なのは「card」classです。-->
    <!--「card」classには以降の子要素で使用するclassが依存する形になります。-->

    <!--その他のclassはサイズ、padding、margin、影を付けるといったcardの構成には関係のないclassです。-->

    <!--この「card」classを指定さえすれば、その中の要素で使用するものは自由に組むことができます。-->
    <!--今回のMeshiterroでは投稿に関する情報を「card-body」classで包括し、その中で投稿したユーザーのアイコン画像を表示する領域と投稿に関する情報を表示する領域をcolによってグリッドで分けています。-->

    <!--投稿に関する情報を表示する領域でcard-titleやcard-textというclassを使用していますが、こちらも必ず使わなければいけないというわけでは、ありません。-->

    <!--cardコンポーネントが提供するclassの詳細については公式を確認してください。-->

    <%= link_to post_image_path(post_image.id) do %>
      <%= image_tag post_image.get_image, class:"card-img-top"; %>
    <% end %>
    <div class="card-body">
      <div class="row">
        <div class="col-2">
          <%= image_tag post_image.user.get_profile_image(100,100), class:"mt-3 rounded-circle"; %>
        </div>
        <div class="col-10">
          <p class="card-title">
            <%= link_to(post_image_path(post_image.id), class:"text-dark") do %>
              <strong><i class="far fa-flag"></i><span> <%= post_image.shop_name %></span></strong>
            <% end %>
          </p>
          <p class="card-text">説明：<%= post_image.caption %></p>
          <span><i class="fas fa-user"></i> By <%= post_image.user.name %> ｜ </span>
          <span><%= link_to "#{post_image.post_comments.count} コメント", post_image_path(post_image.id), class:"text-dark" %></span>
        </div>
      </div>
    </div>
  </div>
  <% end %>
  <%= paginate post_images %>
</div>